<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Current" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Label="Globals">
    <NanoFrameworkProjectSystemPath>$(MSBuildExtensionsPath)\nanoFramework\v1.0\</NanoFrameworkProjectSystemPath>
  </PropertyGroup>
  <Import Project="$(NanoFrameworkProjectSystemPath)NFProjectSystem.Default.props" Condition="Exists('$(NanoFrameworkProjectSystemPath)NFProjectSystem.Default.props')" />
  <ItemGroup>
    <ProjectCapability Include="TestContainer" />
  </ItemGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectTypeGuids>{11A8DD76-328B-46DF-9F39-F559912D0360};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <ProjectGuid>9c22dbe2-6dac-462b-942e-bf483d37bd92</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <FileAlignment>512</FileAlignment>
    <RootNamespace>CCSWE.nanoFramework.Hosting.UnitTests</RootNamespace>
    <AssemblyName>NFUnitTest</AssemblyName>
    <IsCodedUITest>False</IsCodedUITest>
    <IsTestProject>true</IsTestProject>
    <TestProjectType>UnitTest</TestProjectType>
    <TargetFrameworkVersion>v1.0</TargetFrameworkVersion>
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
  </PropertyGroup>
  <Import Project="$(NanoFrameworkProjectSystemPath)NFProjectSystem.props" Condition="Exists('$(NanoFrameworkProjectSystemPath)NFProjectSystem.props')" />
  <PropertyGroup>
    <RunSettingsFilePath>$(MSBuildProjectDirectory)\nano.runsettings</RunSettingsFilePath>
    <LangVersion>default</LangVersion>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="DeviceHostBuilderTests.cs" />
    <Compile Include="Internal\DeviceHostTests.cs" />
    <Compile Include="Mocks\MockHostedService.cs" />
    <Compile Include="Mocks\MockHostedServiceA.cs" />
    <Compile Include="Mocks\MockHostedServiceB.cs" />
    <Compile Include="Mocks\MockServiceA.cs" />
    <Compile Include="Mocks\MockServiceB.cs" />
    <Compile Include="ServiceProviderExtensionsTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="CCSWE.nanoFramework.Logging, Version=0.1.33.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>..\packages\CCSWE.nanoFramework.Logging.0.1.33\lib\CCSWE.nanoFramework.Logging.dll</HintPath>
    </Reference>
    <Reference Include="mscorlib">
      <HintPath>..\packages\nanoFramework.CoreLibrary.1.15.5\lib\mscorlib.dll</HintPath>
    </Reference>
    <Reference Include="nanoFramework.DependencyInjection">
      <HintPath>..\packages\nanoFramework.DependencyInjection.1.1.3\lib\nanoFramework.DependencyInjection.dll</HintPath>
    </Reference>
    <Reference Include="nanoFramework.Hosting">
      <HintPath>..\packages\nanoFramework.Hosting.1.0.40\lib\nanoFramework.Hosting.dll</HintPath>
    </Reference>
    <Reference Include="nanoFramework.Logging, Version=1.1.108.0, Culture=neutral, PublicKeyToken=c07d481e9758c731">
      <HintPath>..\packages\nanoFramework.Logging.1.1.108\lib\nanoFramework.Logging.dll</HintPath>
    </Reference>
    <Reference Include="nanoFramework.TestFramework, Version=2.1.112.0, Culture=neutral, PublicKeyToken=c07d481e9758c731">
      <HintPath>..\packages\nanoFramework.TestFramework.2.1.112\lib\nanoFramework.TestFramework.dll</HintPath>
    </Reference>
    <Reference Include="nanoFramework.UnitTestLauncher, Version=0.0.0.0, Culture=neutral, PublicKeyToken=c07d481e9758c731">
      <HintPath>..\packages\nanoFramework.TestFramework.2.1.112\lib\nanoFramework.UnitTestLauncher.exe</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <None Include="nano.runsettings" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\CCSWE.nanoFramework.Hosting\CCSWE.nanoFramework.Hosting.nfproj" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="packages.lock.json" />
  </ItemGroup>
  <Import Project="$(NanoFrameworkProjectSystemPath)NFProjectSystem.CSharp.targets" Condition="Exists('$(NanoFrameworkProjectSystemPath)NFProjectSystem.CSharp.targets')" />
</Project>